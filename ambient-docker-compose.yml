version: '3.8'

services:
  whoami:
    image: "traefik/whoami"
    restart: always
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`${BASE_PATH}`) && Path(`/whoami`)"
      - "traefik.http.routers.whoami.entrypoints=${HTTP_SCHEME}"
      - "traefik.http.routers.whoami.tls.certresolver=${TLS_POLITIC}"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
      
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${BASE_PATH}`)"
      - "traefik.http.routers.prometheus.entrypoints=${HTTP_SCHEME}"
      - "traefik.http.routers.prometheus.tls.certresolver=${TLS_POLITIC}"
      - "traefik.http.routers.prometheus.middlewares=auth-prometheus"
      - "traefik.http.middlewares.auth-prometheus.basicauth.users=gabriel:$$apr1$$QUg2oyRd$$iQfaU/OFs0JYP3UFuXyNU0"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    environment:
      GF_SECURITY_ADMIN_USER: gabriel
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    ports:
      - "3000:3000"
    networks:
      - traefik-network
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${BASE_PATH}`)"
      - "traefik.http.routers.grafana.entrypoints=${HTTP_SCHEME}"
      - "traefik.http.routers.grafana.tls.certresolver=${TLS_POLITIC}"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"


  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    networks:
      - traefik-network
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_UID}
  
  postgres_backup:
    image: offen/docker-volume-backup
    container_name: postgres_backup
    environment:
      BACKUP_NAME: "postgres_data_backup"
      CLEANUP_KEEP_DAYS: "7"
      BACKUP_INTERVAL: "345600"
    networks:
      - traefik-network
    volumes:
      - postgres_data:/volume
      - ./backups_db:/backups
    restart: always
    depends_on:
      - postgres

volumes:
  prometheus_data:
  grafana_data:
  postgres_data:

networks:
  traefik-network:
    external: true
